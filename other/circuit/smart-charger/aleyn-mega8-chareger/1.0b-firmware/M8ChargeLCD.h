/*******************************************************************************
**                                AVR GUI v2.0                                **
**                                                                            **
**                                                                            **
**                                          Build by GUI Builder v2.0.0.11    **
**                                                     Program by aleyn.wu    **
**                                                 e-mail:aleyn@e-midas.cn    **
**                                                                            **
********************************************************************************
**                                                                            **
**   Menu Author :                                                            **
**   Last update : 2008-11-14 21:47                                           **
**                                                                            **
*******************************************************************************/

#ifndef _GUI_CONFIG_INCLUDE
#define _GUI_CONFIG_INCLUDE

/*******************************************************************************
** 数据名称: GOLBAL_DEF                                                       **
** 功能描述: 全局定义                                                         **
*******************************************************************************/
/*
#define BIT(x)                                  (1 << (x))
#define BIT_SET(a,b)                            a |= BIT(b)
#define BIT_CLR(a,b)                            a &= ~BIT(b)
#define BIT_INV(a,b)                            a ^= BIT(b)
#define BIT_STATUS(a,b)                         (a & BIT(b))

#define BIT_NULL                                0x00
#define BIT_7                                   7
#define BIT_6                                   6
#define BIT_5                                   5
#define BIT_4                                   4
#define BIT_3                                   3
#define BIT_2                                   2
#define BIT_1                                   1
#define BIT_0                                   0

#define BYTE_LOWMASK                            0x0F
#define BYTE_HIGHMASK                           0xF0
#define BYTE_SET_LOW(a)                         ((a) | BYTE_LOWMASK)
#define BYTE_CLR_LOW(a)                         ((a) & BYTE_HIGHMASK)
#define BYTE_SET_HIGH(a)                        ((a) | BYTE_HIGHMASK)
#define BYTE_CLR_HIGH(a)                        ((a) & BYTE_LOWMASK)

#define BYTE                                    unsigned char
#define WORD                                    unsigned int
#define WD16(W)                                 *(unsigned int *)(&W)

#define INT8U                                   unsigned char
#define INT16U                                  unsigned int


#define INT16_MAX_NUM                           5
#define INT8_MAX_NUM                            3

#define TRUE                                    1
#define FALSE                                   0

#define _cli()                                  \
                                                #asm("CLI")
#define _sei()                                  \
                                                #asm("SEI")
#define _nop()                                  \
                                                #asm("NOP")
*/

/*******************************************************************************
** 函数名称: LCD_WriteCtrl                                                    **
** 功能描述: 在LCD写控制字符                                                  **
** 输入参数: BYTE CtrlWord  : 控制字符                                        **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_WriteCtrl(BYTE CtrlWord);

/*******************************************************************************
** 函数名称: LCD_WriteData                                                    **
** 功能描述: 在LCD显示字符                                                    **
** 输入参数: BYTE Data  : 需要显示的字符                                      **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_WriteData(BYTE Data);

/*******************************************************************************
** 函数名称: LCD_Position                                                     **
** 功能描述: 在LCD上定位光标位置                                              **
** 输入参数: INT8U Line  : 第几行  (1 ~ N)                                    **
**           INT8U Pos   : 第几列  (1 ~ N)                                    **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_Position(BYTE Line, BYTE Pos);

/*******************************************************************************
** 函数名称: LCD_HideCursor                                                   **
** 功能描述: 在LCD上关闭光标                                                  **
** 输入参数: 无                                                               **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_HideCursor(void);

/*******************************************************************************
** 函数名称: LCD_ShowCursor                                                   **
** 功能描述: 在LCD上显示光标                                                  **
** 输入参数: 无                                                               **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_ShowCursor(void);

/*******************************************************************************
** 函数名称: LCD_Clear                                                        **
** 功能描述: 清除LCD上所显示的数据                                            **
** 输入参数: 无                                                               **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_Clear(void);

/*******************************************************************************
** 函数名称: LCD_ClearLine                                                    **
** 功能描述: 清除LCD上某一行显示的数据                                        **
** 输入参数: 无                                                               **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_ClearLine(BYTE Line);

/*******************************************************************************
** 函数名称: LCD_ClearToEnd                                                   **
** 功能描述: 清除LCD上某一行，从当前位置到行尾                                **
** 输入参数: 无                                                               **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_ClearToEnd(void);

/*******************************************************************************
** 函数名称: LCD_PutChar                                                      **
** 功能描述: 在LCD显示字符                                                    **
** 输入参数: BYTE Data  : 需要显示的字符                                      **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_PutChar(BYTE Data);

/*******************************************************************************
** 函数名称: LCD_PutStr, LCD_PutStrF                                          **
** 功能描述: 在LCD上显示字符串                                                **
** 输入参数: BYTE *Str         : RAM中的字符串数据                            **
**           flash BYTE *Str   : ROM中的字符串数据                            **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_PutStr(BYTE *Str);

void LCD_PutStrF(flash BYTE *Str);

/*******************************************************************************
** 函数名称: LCD_WriteCGRAM                                                   **
** 功能描述: 往LCD的CGRAM中写入特殊字符图形                                   **
** 输入参数: BYTE Text    : CGRAM对应的字符，也就是字符图形在flash中的位置    **
**           BYTE DDRAM   : 要写入的DDRAM的位置，一般是0~15有效。             **
**           BYTE REVERSE : 掩模反色，0~7分别对应字符图形的0~7行，位1表示反色. **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_WriteCGRAM(flash BYTE *Font, BYTE DDRAM, BYTE Reverse);

/*******************************************************************************
** 函数名称: LCD_Init                                                         **
** 功能描述: 初始化LCD显示模块                                                **
** 输入参数: 无                                                               **
** 输出参数: 无                                                               **
*******************************************************************************/
void LCD_Init(void);

/*******************************************************************************
**                                INCLUDE LIB                                 **
*******************************************************************************/
#include "M8ChargeLCD.c"

#endif
/*******************************************************************************
**                                END OF FILE                                 **
*******************************************************************************/
