__start:
__text_start:
    0013 EDCF      LDI	R28,0xDF
    0014 E0D0      LDI	R29,0
    0015 BFCD      OUT	0x3D,R28
    0016 BFDE      OUT	0x3E,R29
    0017 51C0      SUBI	R28,0x10
    0018 40D0      SBCI	R29,0
    0019 EA0A      LDI	R16,0xAA
    001A 8308      STD	Y+0,R16
    001B 2400      CLR	R0
    001C E6E0      LDI	R30,0x60
    001D E0F0      LDI	R31,0
    001E E010      LDI	R17,0
    001F 36E0      CPI	R30,0x60
    0020 07F1      CPC	R31,R17
    0021 F011      BEQ	0x0024
    0022 9201      ST	R0,Z+
    0023 CFFB      RJMP	0x001F
    0024 8300      STD	Z+0,R16
    0025 E2E6      LDI	R30,0x26
    0026 E0F0      LDI	R31,0
    0027 E6A0      LDI	R26,0x60
    0028 E0B0      LDI	R27,0
    0029 E010      LDI	R17,0
    002A 32E6      CPI	R30,0x26
    002B 07F1      CPC	R31,R17
    002C F021      BEQ	0x0031
    002D 95C8      LPM
    002E 9631      ADIW	R30,1
    002F 920D      ST	R0,X+
    0030 CFF9      RJMP	0x002A
    0031 D01C      RCALL	_main
_exit:
    0032 CFFF      RJMP	_exit
FILE: Z:\dev-prj\digital-toy\AVR\attiny13_groundup\main.c
(0001) #include <iot13v.h>
(0002) 
(0003) void Delay()
(0004) 
(0005) 	{
(0006) 
(0007)  	  unsigned char a, b;
(0008) 
(0009) 	  for (a = 1; a; a++)
_Delay:
  a                    --> R16
  b                    --> R18
    0033 E001      LDI	R16,1
    0034 C006      RJMP	0x003B
(0010) 
(0011) 		 for (b = 1; b; b++)
    0035 E021      LDI	R18,1
    0036 C001      RJMP	0x0038
    0037 9523      INC	R18
    0038 2322      TST	R18
    0039 F7E9      BNE	0x0037
    003A 9503      INC	R16
    003B 2300      TST	R16
    003C F7C1      BNE	0x0035
    003D 9508      RET
_LED_On:
  i                    --> R20
    003E D043      RCALL	push_gset1
    003F 2F40      MOV	R20,R16
    0040 2F51      MOV	R21,R17
(0012) 
(0013) 			;
(0014) 
(0015) 	}
(0016) 
(0017) 
(0018) 
(0019) void LED_On(int i)
(0020) 
(0021) 	{
(0022) 
(0023)  	 PORTB=~(1<<i);	/* 输出低电平，使LED发光 */
    0041 E001      LDI	R16,1
    0042 E010      LDI	R17,0
    0043 2F24      MOV	R18,R20
    0044 2F35      MOV	R19,R21
    0045 D053      RCALL	lsl16
    0046 2E20      MOV	R2,R16
    0047 2E31      MOV	R3,R17
    0048 9420      COM	R2
    0049 9430      COM	R3
    004A BA28      OUT	0x18,R2
(0024) 
(0025) 	 Delay();
    004B DFE7      RCALL	_Delay
    004C D038      RCALL	pop_gset1
    004D 9508      RET
(0026) 
(0027) 	}
(0028) 
(0029) 
(0030) 
(0031) void main()
(0032) 
(0033) 	{
(0034) 
(0035) 	int i;
(0036) 
(0037) 	DDRB = 0xFF;	/* 定义B口为输出*/
_main:
  i                    --> R20
    004E EF8F      LDI	R24,0xFF
    004F BB87      OUT	0x17,R24
(0038) 
(0039) 	PORTB = 0xFF;	/* 关闭全部LED */
    0050 BB88      OUT	0x18,R24
    0051 C02E      RJMP	0x0080
(0040) 
(0041) 
(0042) 
(0043) 	while (1)
(0044) 
(0045) 		{
(0046) 
(0047) 		/* 往前步进 */
(0048) 
(0049) 		for (i = 0; i < 8; i++)
    0052 2744      CLR	R20
    0053 2755      CLR	R21
(0050) 
(0051) 			LED_On(i);
    0054 2F04      MOV	R16,R20
    0055 2F15      MOV	R17,R21
    0056 DFE7      RCALL	_LED_On
    0057 5F4F      SUBI	R20,0xFF
    0058 4F5F      SBCI	R21,0xFF
    0059 3048      CPI	R20,0x8
    005A E0E0      LDI	R30,0
    005B 075E      CPC	R21,R30
    005C F3BC      BLT	0x0054
(0052) 
(0053) 		/* 往后步进 */
(0054) 
(0055) 		for (i = 8; i > 0; i--)
    005D E048      LDI	R20,0x8
    005E E050      LDI	R21,0
(0056) 
(0057) 			LED_On(i);
    005F 2F04      MOV	R16,R20
    0060 2F15      MOV	R17,R21
    0061 DFDC      RCALL	_LED_On
    0062 5041      SUBI	R20,1
    0063 4050      SBCI	R21,0
    0064 2422      CLR	R2
    0065 2433      CLR	R3
    0066 1624      CP	R2,R20
    0067 0635      CPC	R3,R21
    0068 F3B4      BLT	0x005F
(0058) 
(0059) 		/*  跳 跃  */
(0060) 
(0061) 		for (i = 0; i < 8; i += 2)
    0069 2744      CLR	R20
    006A 2755      CLR	R21
(0062) 
(0063) 			LED_On(i);
    006B 2F04      MOV	R16,R20
    006C 2F15      MOV	R17,R21
    006D DFD0      RCALL	_LED_On
    006E 5F4E      SUBI	R20,0xFE
    006F 4F5F      SBCI	R21,0xFF
    0070 3048      CPI	R20,0x8
    0071 E0E0      LDI	R30,0
    0072 075E      CPC	R21,R30
    0073 F3BC      BLT	0x006B
(0064) 
(0065) 		for (i = 7; i > 0; i -= 2)
    0074 E047      LDI	R20,7
    0075 E050      LDI	R21,0
(0066) 
(0067) 			LED_On(i);
FILE: <library>
    0076 2F04      MOV	R16,R20
    0077 2F15      MOV	R17,R21
    0078 DFC5      RCALL	_LED_On
    0079 5042      SUBI	R20,2
    007A 4050      SBCI	R21,0
    007B 2422      CLR	R2
    007C 2433      CLR	R3
    007D 1624      CP	R2,R20
    007E 0635      CPC	R3,R21
    007F F3B4      BLT	0x0076
    0080 CFD1      RJMP	0x0052
    0081 9508      RET
push_gset1:
    0082 935A      ST	R21,-Y
    0083 934A      ST	R20,-Y
    0084 9508      RET
pop_gset1:
    0085 E0E1      LDI	R30,1
pop:
    0086 9149      LD	R20,Y+
    0087 9159      LD	R21,Y+
    0088 FDE0      SBRC	R30,0
    0089 9508      RET
    008A 9169      LD	R22,Y+
    008B 9179      LD	R23,Y+
    008C FDE1      SBRC	R30,1
    008D 9508      RET
    008E 90A9      LD	R10,Y+
    008F 90B9      LD	R11,Y+
    0090 FDE2      SBRC	R30,2
    0091 9508      RET
    0092 90C9      LD	R12,Y+
    0093 90D9      LD	R13,Y+
    0094 FDE3      SBRC	R30,3
    0095 9508      RET
    0096 90E9      LD	R14,Y+
    0097 90F9      LD	R15,Y+
    0098 9508      RET
lsl16:
    0099 2322      TST	R18
    009A F021      BEQ	0x009F
    009B 0F00      LSL	R16
    009C 1F11      ROL	R17
    009D 952A      DEC	R18
    009E CFFA      RJMP	lsl16
    009F 9508      RET
